
set, map은 insert, find, erase를 이용함

https://modoocode.com/176
'deque'
처음과 끝 말고 중간에 원소의 삽입과 삭제를 빈번하게 사용한다면 
데크 보다는 리스트(list)를 사용하는 것을 추천한다.
(queue와 list의 결정적 차이)

https://modoocode.com/177
'list'
다른 표준 순차 컨테이너 (vector, deque) 와 비교했을 때, 
리스트는 원소의 삽입, 삭제, 그리고 컨테이너 내부에서의 원소들 간의 이동이 매우 효율적이다. 
따라서 정렬 알고리즘 처럼 원소의 이동이 빈번하게 일어나는 곳에 적용하면 효율적이다. 

https://modoocode.com/224#page-heading-4
'정렬되지 않은 셋과 맵 (unordered_set, unordered_map)'
이 말이 무슨 말이냐면, 셋이나 맵의 경우 원소들이 순서대로 정렬되어서 내부에 저장되지만, 
unordered_set 과 unordered_map 의 경우 원소들이 순서대로 정렬되서 들어가지 않는다는 뜻입니다. 
따라서 반복자로 원소들을 하나씩 출력해보면 거의 랜덤한 순서로 나오는 것을 볼 수 있습니다.
-
따라서 unordered_set 과 unordered_map 의 경우 평균적으로 O(1)O(1) 시간으로 원소의 삽입/탐색을 
수행할 수 있지만 최악의 경우 O(N)O(N) 으로 수행될 수 있습니다. (그냥 set 과 map 의 경우 평균도 
O(log N)O(logN) 최악의 경우에도 O(log N)O(logN) 으로 실행됩니다)
-
이 때문에 보통의 경우에는 그냥 안전하게 맵이나 셋을 사용하고, 만약에 최적화가 매우 필요한 작업일 경우에만 
해시 함수를 잘 설계해서 unordered_set 과 unordered_map 을 사용하는 것이 좋습니다.